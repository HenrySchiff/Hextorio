Entity extends Node2D
| item_type: ItemType
| logic_components: [LogicComponent] // children of entity node

Shape extends Node2D

LogicComponent extends Node

Item extends Node2D
| item_type: ItemType

ItemType extends Resource
| entity_scene: PackedScene || null
| shape_scene: PackedScene
| recipe: Recipe || null

Recipe extends Resource
| inputs: [ItemType]
| quantity: int
| craft_time: float


### Example ###

TransportBelt extends Entity
| item_type: TransportBeltType


Entities are instantiated, exist on the tilemap, and perform logic. Items represent uninstantiated entities. They exist within the world, e.g. on belts or in assemblers, or in the player's inventory. Entities and items are both rendered with the same shape, but items appear smaller and aren't animated.

Logic: scenes and scripts that handle automation / move items around.
- Transport Lines move items. They belong to TransportBelts, UndergroundTransportBelts, and Splitters.
- Containers (or some better name) hold items. Inventory, chests, etc.
- Crafters hold a reference to two containers: an input and output container. They take items in the input container, and according to some recipe, convert them into items that appear in the output container. Crafters belong to Assembler, Furnaces, etc.


HexagonalTileMap extends Node2D
|
| // maps tile positions -> hexagon centers
| hex_tile_map: Dictionary[Vector2i, Vector2] 
|
| // maps tile positions -> entities
| entity_tile_map: Dictionary[Vector2i, Entity]
|
| local_to_map(Vector2) -> Vector2i


##################################################

// An entity can have multiple belt components,
// but only one belt component can exist per tile.
// A belt component can have up to six transport line pairs
BeltComponent extends Node2D
|
| // indices of the inputs and outputs to this belt component
| inputs:  Array[TransportLinePair] // size of 6, initially all null
| outputs: Array[TransportLinePair] // size of 6, initially all null
|
| (child nodes): TransportLinePairs+
|
| 
| tile_update(tilemap: HexTileMap) -> void:
|
| set_pair

TransportLinePair extends Node2D
|
| left_transport_line:  TransportLine
| right_transport_line: TransportLine
|
| set_next_lines(next_pair: TransportLinePair) -> void
| set_next_split_lines(next_pair: TransportLinePair) -> void
|
| // an input or output of -1 sets that end to the center
| set_lines(input: int, output: int) -> void
|
| // called by set_lines:
| set_lines_thirty
| set_lines_sixty
| set_lines_center


TransportLine extends Path2D


##################################################

class_name EntityPlacer
|
| selected_item: ItemType
| selected_item_shape: Shape
|
| mouse_pos: Vector2
| current_tile: Vector2i
| last_tile: Vector2i
|
| place(item_type: ItemType, tile_pos: Vector2i)
|
| remove(tile_pos: Vector2i)


class_name BeltPlacer
|
|